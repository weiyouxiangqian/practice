题目描述
•连续输入字符串，请按长度为8拆分每个字符串后输出到新的字符串数组；
•长度不是8整数倍的字符串请在后面补数字0，空字符串不处理。

输入描述:
连续输入字符串(输入2次,每个字符串长度小于100)

输出描述:
输出到长度为8的新字符串数组

输入例子:
abc
123456789

输出例子:
abc00000
12345678
90000000
解法一：

String类的各个函数应用，以及递归思想应用
#include <iostream>
#include <string>
using namespace std;
void fuck(string str) {
    if (str == "")
        return;
    if (str.size() <= 8) {
        str.append(8 - str.size(), '0');
        cout << str << endl;
        return;
    }
    cout << str.substr(0, 8) << endl;
    fuck(str.substr(8, str.size()));
}
int main() {
    string str1, str2;
    while(cin >> str1 >> str2) 
   { fuck(str1);
    fuck(str2);}
   
    return 0;
}

解法二：
链接：https://www.nowcoder.com/questionTerminal/d9162298cb5a437aad722fccccaae8a7
来源：牛客网
首先用cin存入str1，str2，然后赋值给vector<string> temp字符串数组，两个字符串就可以用temp[1]，temp[2]表示。
然后判断每个字符串是否是8的整数倍，不是的在后面补0，再利用子字符串输出。
#include<iostream>
#include<string>
#include<vector>
using namespace std;
int main()
{
	string str1;
	string str2;
	while(cin >> str1)
	{
		cin >> str2;
		vector<string>temp;
		temp.push_back(str1);
		temp.push_back(str2);
		for(int i = 0;i <2;i++)
		{
		string t = temp[i];
		int n1 = t.size()/8;
		int n2 = t.size()%8;
		for(int k=0;k<8-n2 && n2>0;k++)
		{
			t +='0';
		}
		if(n2>0)
			n1++;
		for(int j=0;j<n1;j++)
		{
			cout<<t.substr(j*8,8)<<endl;
		}
		}
	}
}

题目要一次输入两个，就两个cin，之后判断若是某个不是8的整数倍，就在字符串后面补齐‘0’，然后利用substr 分段输出就行。
