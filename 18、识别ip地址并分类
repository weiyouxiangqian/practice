链接：https://www.nowcoder.com/questionTerminal/de538edd6f7e4bc3a5689723a7435682
来源：牛客网
这道题目我觉得我的思路比较清晰，并且也比较容易理解和编写。这里不讲具体的编程细节，主要讲几个十分需要注意的细节和函数。 
函数说明： 
stringtoint（）：这是个我编写的将string转换成int的函数，由于int<255所以不用考虑转换的结果是否会溢出。 
toint()函数：将一个完整的ip地址或者mask转换对应的字符串转换成int放入vector中，这样可以通过判断vector里面的4个数值的范围进行判断即可。简化了操作。 
masklivalid（）：函数功能是判断mask(子网掩码)是否有效， 如果第一个是255,则判断第二个是不是255，若第二个不是255，则第三个和第四个必须是0,（见子网掩码的规则，前面为1，后面为0），同时第二个必须是254,252,248,240,224,192,128,0；至于原因，将他们转换成二进制，前面为连续的1，后面为连续的0，符合要求。若第二个为255，则第三个以此类推。 如果第一个不是255，则同理，只能是254,252,248,240,224,192,128（注意不能为0），因为子网掩码mask可以以0开头，但不是有效的掩码。 
理解完这几个函数（其实很好理解对吧？） 
我们就可以以很清晰的思路进行编写程序： 
1、先判断子网掩码mask是否有效，无效的话，直接无效数目+1； 
2、若有效；再分别判断属于哪一类IP地址。 

前方高能：前方高能,前方高能 （重要的事情说三遍） 需要十分注意的是：我当时得出的结果是60%通过，A类地址少一个。我就纳闷了，思路都没错啊！！ 
这是因为。。。。 
私有IP地址和A,B,C,D,E类地址是不冲突的，什么意思呢？就是A,B,C,D,E类地址也可以是私有地址，只要他们符合私有地址的规则。所以不能用if...，else if...，而应该用if... if...（或者在各自类中再进行判断是否既属于该类又属于私有地址的情况）。终于花了1个小时做出来了，已泪崩。希望能给困惑的小伙伴们一些帮助（代码也许写的不算优美，嘻嘻，见谅）。

链接：https://www.nowcoder.com/questionTerminal/de538edd6f7e4bc3a5689723a7435682
来源：牛客网
#include<iostream>
using namespace std;
#include<vector>
#include<string>
#include<sstream>
 
int stringtoint(string str){
    stringstream ss;
    ss<<str;
    int x;
    ss>>x;
    return x;
}
 
vector<int> toint(string str){
    vector<int> res;
    string temp;
    int ele;
    for(int i=0;i<str.length();i++){
        if(str[i]!='.'){
            temp.push_back(str[i]);
        }
        else{
            ele=stringtoint(temp);
temp.clear();
            res.push_back(ele);
        }
    }
    ele=stringtoint(temp);
    res.push_back(ele);
    return res;
}
 
bool maskisvalid(vector<int> res){
    if(res.size()!=4)
        return false;
    if(res[0]==255){
        if(res[1]==255){
            if(res[2]==255){
                if(res[3]==254||res[3]==252||res[3]==248||res[3]==240||res[3]==224||res[3]==192||res[3]==128||res[3]==0){
                    return true;
                }
                else{
                    return false;
                }
            }
            else{
                if(res[2]==254||res[2]==252||res[2]==248||res[2]==240||res[2]==224||res[2]==192||res[2]==128||res[2]==0){
                    if(res[3]==0){
                        return true;
                    }
                    else{
                        return false;
                    }
                }
            }
        }
        else{
            if(res[1]==254||res[1]==252||res[1]==248||res[1]==240||res[1]==224||res[1]==192||res[1]==128||res[1]==0){
                if(res[3]==0&&res[2]==0){
                    return true;
              }
                else{
                     return false;
                    }
             }
        }            
    }
    else{
            if(res[0]==254||res[0]==252||res[0]==248||res[0]==240||res[0]==224||res[0]==192||res[0]==128){
                if(res[3]==0&&res[2]==0&&res[1]==0){
                    return true;
              }
}
                else{
                     return false;
            }       
    }
    return false;
}
 
int main(){
    string str;
int* res=new int[7];
    for(int j=0;j<7;j++)
        res[j]=0;
    while(cin>>str){
         string ipstring;
         string maskstring;
        vector<int> ip,mask;
        int i=0;
        for(;str[i]!='~';i++){
            ipstring.push_back(str[i]);
        }
        i++;
        for(;i<str.length();i++){
            maskstring.push_back(str[i]);
        }
        ip=toint(ipstring);
        mask=toint(maskstring);
            if(maskisvalid(mask)){
            if(ip[1]>=0&&ip[1]<=255&&ip[2]>=0&&ip[2]<=255&&ip[3]>=0&&ip[3]<=255){
                if(ip[0]>=1&&ip[0]<=126){
                    res[0]++;
                    if(ip[0]==10)
                        res[6]++;
                }
                else if(ip[0]>=128&&ip[0]<=191){
                    res[1]++;
                    if(ip[0] == 172 && ip[1] >= 16 && ip[1] <= 32)
                        res[6]++;
                }
                else if(ip[0]>=192&&ip[0]<=223){
                    res[2]++;
                    if(ip[0] == 192 && ip[1] == 168)
                        res[6]++;
                }
                else if(ip[0]>=224&&ip[0]<=239){
                    res[3]++;
                } 
                else if(ip[0]>=240&&ip[0]<=255){
                    res[4]++;
                }   
            }  
        }
            else{
                res[5]++;
            }
    }
        cout<<res[0]<<" "<<res[1]<<" "<<res[2]<<" "<<res[3]<<" "<<res[4]<<" "<<res[5]<<" "<<res[6]<<endl;
        return 0;
}

