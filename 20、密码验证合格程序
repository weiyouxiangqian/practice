题目描述
密码要求:
 
 
 
1.长度超过8位
 
 
 
2.包括大小写字母.数字.其它符号,以上四种至少三种
 
 
 
3.不能有相同长度超2的子串重复
 
 
 
说明:长度超过2的子串


输入描述:
一组或多组长度超过2的子符串。每组占一行

输出描述:
如果符合要求输出：OK，否则输出NG

输入例子:
021Abc9000
021Abc9Abc1
021ABC9000
021$bc9000

输出例子:
OK
NG
NG
OK
自己编的，主要在于第二个和第三条件的判断，
第二个注意用数组来记录比较好，第三个用两次循环的形式，可以再研究一下有没有更好的。

#include<iostream>
#include<string>
#include<vector>
#include<algorithm>


using namespace std;

int main(){
    
    string s;
    while(cin>>s){
        bool FLAG=true;
        if(s.size()<=8){
            cout<<"NG"<<endl;
            continue;}
        
        //int count=0;
        int flag[4]={0};   
       for(int i=0;i<s.size();i++){
                //bool flag1=false,falg2=false,flag3=false,flag4=false;
                
                if(s[i]>='0'&&s[i]<='9')
                    flag[0]=1;
                else if(s[i]>='A'&&s[i]<='Z')
                    flag[1]=1;
                else if(s[i]>='a'&&s[i]<='z')
                    flag[2]=1;
                else flag[3]=1;
        }
            
        if(flag[0]+flag[1]+flag[2]+flag[3]<3){
            
            cout<<"NG"<<endl;
            continue; 
        }
        


        for(int i=0;i<s.size()-2;++i){
        	for(int j=i+2;j<s.size()-1;++j){
                int tmp = 0;
                if(s[i] == s[j] && s[i+1] == s[j+1] &&s[i+2] == s[j+2]){
                    cout<<"NG"<<endl;
                    FLAG=false;    
                    break;    
                    //continue;    
                    }
                
                } 
            //if(!FLAG)break;
                    
            }     
        //if(!FLAG)continue;
         if(FLAG)cout<<"OK"<<endl;               
           //注意在这里很容易出现问题,因为前两个条件都是判断不符合直接continue，就跳出了这一次输入，
        //但最后这个条件，一个break没法跳出整个循环，所以才需要一个FLAG来判断一下
                    
                    //while(s[i+tmp] == s[j+tmp]){
                    //m += 1;
					//++tmp;
                    //}
                    //if( m > 2 ){
                    //    cout<<"NG"<<endl;
                    //continue;
                    //}
                    
                    //else
                    //m = 0;
        	
		//for(int i = 0; i <= s.size()-6; i++)
            //for(int j = i+3;j < s.size();j++)
            //if(s[i] == s[j] && s[i+1] == s[j+1] &&s[i+2] == s[j+2])FLAG=false;
        
        //if(!FLAG)cout<<"NG"<<endl;
        

    }
    
    return 0;
}
